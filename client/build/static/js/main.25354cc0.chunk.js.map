{"version":3,"sources":["assets/img/SPBRetroSlantAcross1382x120.png","utils/AppContext.js","components/Hero.js","utils/ParseRecipe.js","components/InputForm.js","components/FlexContainer.js","components/Pantry.js","components/Card.js","components/RecipeContainer.js","components/Landing.js","components/LogoSmall.js","components/Search.js","components/Nav.js","components/Library.js","components/CheckBox.js","components/Settings.js","components/Details.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","React","createContext","id","cuisine","excludeCuisine","diet","intolerances","includeIngredients","excludeIngredients","recipes","savedRecipes","activeRecipe","activePage","children","className","style","backgroundColor","parseIngredients","arr","map","item","name","amount","toFixed","unit","unitShort","getAllIngredients","recipe","getUsedIngredients","getMissedIngredients","missedIngredients","usedIngredients","getUnusedIngredients","unusedIngredients","getNutrients","nutrition","nutrients","title","dv","percentOfDailyNeeds","getInstructions","analyzedInstructions","steps","step","getInformation","prepTime","preparationMinutes","cookTime","cookingMinutes","url","sourceUrl","image","submitHandler","onSubmit","type","placeholder","display","flexWrap","justifyContent","flexDirection","items","onClickHandler","CSS","margin","FlexContainer","key","uuid","onClick","dispatch","src","alt","isAuthenticated","useAuth0","useContext","AppContext","background","color","padding","borderRadius","to","filter","information","Card","loginWithRedirect","aria-hidden","Image","useState","offset","setOffset","useEffect","LogoSmall","InputForm","event","preventDefault","Set","target","firstChild","value","split","trim","Pantry","innerText","req","res","console","log","fetch","method","headers","body","JSON","stringify","join","number","instructionsRequired","fillIngredients","addRecipeInformation","addRecipeNutrition","ignorePantry","then","response","json","results","catch","err","RecipeContainer","length","instructions","allIngredients","pruneRecipe","Landing","logout","textAlign","fontSize","text","onChangeHandler","checked","onChange","setIntolerances","setDiet","setExcludeCuisine","CheckBox","includes","class","colSpan","state","setState","payload","user","email","localforage","getItem","setItem","Provider","Hero","exact","path","render","Search","Library","Settings","Details","Nav","Boolean","window","location","hostname","match","ReactDOM","domain","clientId","redirectUri","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.25354cc0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/SPBRetroSlantAcross1382x120.b0d88454.png\";","import React from \"react\";\n\nexport default React.createContext({\n    id: \"\",\n    cuisine: [],\n    excludeCuisine: [],\n    diet: [],\n    intolerances: [],\n    includeIngredients: [],\n    excludeIngredients: [],\n    recipes: [],\n    savedRecipes: [],\n    activeRecipe: 0,\n    activePage: \"\",\n});\n","import React from \"react\";\n\nexport default ({ children }) => {\n    const CSS = { backgroundColor: \"var(--lgreen)\" };\n    return (\n        <section className=\"App hero is-success is-fullheight\" style={CSS}>\n            <div className=\"hero-body\">\n                <div className=\"container\">{children}</div>\n            </div>\n        </section>\n    );\n};\n","// Parses ingredient array from recipe object and returns an array\n// of more concise recipe objects. Don't use this function directly.\n// Use the more specific wrapper function below this one.\nconst parseIngredients = (arr) =>\n    arr.map((item) => ({\n        name: item.name,\n        amount: item.amount.toFixed(1),\n        unit: item.unitShort,\n    }));\n\n// Returns array of all ingredients from recipe\nexport const getAllIngredients = (recipe) => [\n    ...getUsedIngredients(recipe),\n    ...getMissedIngredients(recipe),\n];\n\n// Returns array of ingredients in pantry and in recipe\nexport const getMissedIngredients = (recipe) =>\n    parseIngredients(recipe.missedIngredients);\n\n// Returns array of ingredients in pantry but not in recipe\nexport const getUsedIngredients = (recipe) =>\n    parseIngredients(recipe.usedIngredients);\n\n// Returns array of ingredients in pantry but not in recipe\nexport const getUnusedIngredients = (recipe) =>\n    parseIngredients(recipe.unusedIngredients);\n\n// Returns array of nutrients from recipe\nexport const getNutrients = (recipe) =>\n    recipe.nutrition.nutrients.map((item) => ({\n        name: item.title,\n        amount: item.amount.toFixed(0),\n        unit: item.unit,\n        dv: item.percentOfDailyNeeds.toFixed(0),\n    }));\n\n// Returns step by step instructions from recipe as an array of strings\nexport const getInstructions = (recipe) =>\n    recipe.analyzedInstructions\n        ? recipe.analyzedInstructions[0].steps.map((step) => step.step)\n        : [];\n\n// Returns basic info for recipe\nexport const getInformation = (recipe) => ({\n    id: recipe.id,\n    name: recipe.title,\n    prepTime: recipe.preparationMinutes,\n    cookTime: recipe.cookingMinutes,\n    url: recipe.sourceUrl,\n    image: recipe.image,\n});\n\nexport const pruneRecipe = (recipe) => ({\n    information: getInformation(recipe),\n    instructions: getInstructions(recipe),\n    nutrients: getNutrients(recipe),\n    missedIngredients: getMissedIngredients(recipe),\n    usedIngredients: getUsedIngredients(recipe),\n    unusedIngredients: getUnusedIngredients(recipe),\n    allIngredients: getAllIngredients(recipe),\n});\n","import React from \"react\";\n\nexport default ({ submitHandler }) => {\n    return (\n        <form className=\"field has-addons\" onSubmit={submitHandler}>\n            <input className=\"input\" type=\"text\" placeholder=\"Ingredients\" />\n            <button className=\"add-button\">Add</button>\n        </form>\n    );\n};\n","import React from \"react\";\n\nexport default ({ children }) => {\n    const CSS = {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        flexDirection: \"row\",\n    };\n    return (\n        <div className=\"container\" style={CSS}>\n            {children}\n        </div>\n    );\n};\n","import React from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\n// Components\nimport FlexContainer from \"./FlexContainer\";\n\nexport default ({ items, onClickHandler }) => {\n    const CSS = { margin: \"0.2em\" };\n    return (\n        <FlexContainer>\n            {items.map((item) => (\n                <button\n                    key={uuid()}\n                    className=\"button\"\n                    onClick={onClickHandler}\n                    style={CSS}>\n                    {item}\n                </button>\n            ))}\n        </FlexContainer>\n    );\n};\n","import React, { useContext } from \"react\";\nimport AppContext from \"../utils/AppContext\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nexport default ({ dispatch, id, src, alt, title, prepTime, cookTime }) => {\n    const { isAuthenticated } = useAuth0();\n    const { activePage, recipes, savedRecipes } = useContext(AppContext);\n    const CSS = {\n        margin: \"0.5em\",\n        background: \"#222222\",\n        color: \"var(--dgreen)\",\n        padding: \"1px\",\n        borderRadius: \"3px\",\n    };\n\n    // Details link handler\n    const setActiveRecipe = () => dispatch({ activeRecipe: id });\n\n    // Save Recipe\n    const saveRecipe = () => {\n        const recipe = [...recipes, ...savedRecipes].filter(\n            ({ information }) => information.id === id\n        )[0];\n        dispatch({ savedRecipes: [...savedRecipes, recipe] });\n    };\n\n    // Delete Recipe\n    const deleteRecipe = () => {\n        if (isAuthenticated)\n            dispatch({\n                savedRecipes: savedRecipes.filter(\n                    ({ information }) => information.id !== id\n                ),\n            });\n    };\n\n    return (\n        <div className=\"card card-modify\" style={CSS}>\n            <div className=\"card-image\">\n                <figure className=\"image\">\n                    <img src={src} alt={alt} />\n                </figure>\n            </div>\n            <header className=\"card-header\">\n                <p className=\"card-header-title is-centered\">{title}</p>\n            </header>\n            <div className=\"card-content\">\n                <div className=\"content\">\n                    <p>\n                        Prep <i className=\"fas fa-clock\"></i> : {prepTime} min\n                    </p>\n                    <p>\n                        Cook <i className=\"fas fa-clock\"></i> : {cookTime} min\n                    </p>\n                </div>\n            </div>\n            <footer className=\"card-foot\">\n                <Link\n                    to=\"/details\"\n                    className=\"moreButton button is-fullwidth\"\n                    onClick={setActiveRecipe}>\n                    Details\n                </Link>\n                {activePage === \"search\" ? (\n                    <button\n                        className=\"save-button button is-fullwidth\"\n                        onClick={saveRecipe}>\n                        Save\n                    </button>\n                ) : activePage === \"library\" ? (\n                    <button\n                        className=\"delete-button button is-fullwidth\"\n                        onClick={deleteRecipe}>\n                        Delete\n                    </button>\n                ) : null}\n            </footer>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\n// Components\nimport Card from \"./Card\";\nimport FlexContainer from \"./FlexContainer\";\n\nexport default ({ dispatch, recipes }) => {\n    return (\n        <FlexContainer>\n            {recipes.map(({ information }) => (\n                <Card\n                    key={uuid()}\n                    dispatch={dispatch}\n                    id={information.id}\n                    src={information.image}\n                    alt={information.name}\n                    title={information.name}\n                    prepTime={information.prepTime}\n                    cookTime={information.cookTime}\n                />\n            ))}\n        </FlexContainer>\n    );\n};\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Link } from \"react-router-dom\";\n\nexport default () => {\n    const { loginWithRedirect } = useAuth0();\n\n    return (\n        <>\n            <h1 className=\"landingtext\">Welcome to SUPER PANTRY BUDDY!!!</h1>\n            \n\n            <h2 className=\"landingtext\">\n                To get started, click the <i\n                            className=\"fas fa-sign-in-alt tabicon\"\n                            aria-hidden=\"true\"></i> on the bottom right of the screen to login and get started!!!\n            </h2>\n        </>\n    );\n};\n","import React from \"react\";\nimport Image from \"../assets/img/SPBRetroSlantAcross1382x120.png\";\n \nexport default () => (\n    <>\n        <figure className=\"headerImageSPB\">\n            <img src={Image} alt=\"super pantry buddy logo\" />\n        </figure>\n    </>\n);\n","import React, { useContext, useEffect, useState } from \"react\";\nimport AppContext from \"../utils/AppContext\";\nimport { pruneRecipe } from \"../utils/ParseRecipe\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\n// Components\nimport InputForm from \"./InputForm\";\nimport Pantry from \"./Pantry\";\nimport RecipeContainer from \"./RecipeContainer\";\nimport fetch from \"node-fetch\";\nimport Landing from \"./Landing\";\nimport LogoSmall from \"./LogoSmall\"\n\nexport default ({ dispatch }) => {\n    const { isAuthenticated } = useAuth0();\n    const {\n        cuisine,\n        excludeCuisine,\n        diet,\n        intolerances,\n        includeIngredients,\n        excludeIngredients,\n        recipes,\n    } = useContext(AppContext);\n    const [offset, setOffset] = useState(6);\n    useEffect(() => dispatch({ activePage: \"search\" }), []);\n\n    // InputForm handler\n    const addToIncludeIngredients = (event) => {\n        event.preventDefault();\n        dispatch({\n            includeIngredients: [\n                ...new Set([\n                    ...includeIngredients,\n                    ...event.target.firstChild.value\n                        .split(\",\")\n                        .map((item) => item.trim())\n                        .filter((item) => item !== \"\"),\n                ]),\n            ],\n        });\n        event.target.firstChild.value = \"\";\n    };\n\n    // Pantry item tags handler\n    const deleteFromIncludeIngredients = (event) => {\n        dispatch({\n            includeIngredients: includeIngredients.filter(\n                (item) => item !== event.target.innerText\n            ),\n        });\n    };\n\n    // Get recipes button handler\n    const getRecipes = (req, res) => {\n\n        console.log(\"getRecipes\")\n         \n        fetch(\"/api/search\", {\n            method: \"POST\",\n            headers: { \n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                cuisine: cuisine.join(),\n                excludeCuisine: excludeCuisine.join(),\n                diet: diet.join(),\n                intolerances: intolerances.join(),\n                includeIngredients: includeIngredients.join(),\n                excludeIngredients: excludeIngredients.join(),\n                //need to add not user settable parameters in here\n                number: 6,\n                instructionsRequired: true,\n                fillIngredients: true,\n                addRecipeInformation: true,\n                addRecipeNutrition: true,\n                ignorePantry: true,\n            }),\n        })  \n\n        .then((response) => response.json())\n        .then((results) => res.json(results))\n \n\n\n            .catch((err) => console.log(err));\n    };\n\n    // Get more recipes button handler\n    const moreRecipes = () => {\n        setOffset(offset + 6);\n        fetch(\"api/search\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                cuisine: cuisine.join(),\n                excludeCuisine: excludeCuisine.join(),\n                diet: diet.join(),\n                intolerances: intolerances.join(),\n                includeIngredients: includeIngredients.join(),\n                excludeIngredients: excludeIngredients.join(),\n                //need to add not user settable parameters in here\n                number: 6,\n                offset: offset,\n                instructionsRequired: true,\n                fillIngredients: true,\n                addRecipeInformation: true,\n                addRecipeNutrition: true,\n                ignorePantry: true,\n            }),\n        })\n            .then((response) => response.json())\n            .then(({ results }) =>\n                dispatch({\n                    recipes: [\n                        ...recipes,\n                        ...results.map((recipe) => pruneRecipe(recipe)),\n                    ],\n                })\n            )\n            .catch((err) => console.log(err));\n    };\n    return (\n        <>\n        <LogoSmall/>\n            {isAuthenticated ? (\n                <>\n                    <br></br>\n                    <h6>\n                        Type in the ingredients you have on hand to find recipes\n                        that work for you! Use the Details and Save buttons to\n                        take a closer look or save the recipe to your library!\n                    </h6>\n                    <br></br>\n                    <InputForm submitHandler={addToIncludeIngredients} />\n                    <h6>\n                        Once you add ingredients, you can click to delete them or click Get Recipes to start cooking!\n                    </h6>\n                    <Pantry\n                        items={includeIngredients}\n                        onClickHandler={deleteFromIncludeIngredients}\n                    />\n                    <button\n                        className=\"moreButton button is-fullwidth\"\n                        onClick={getRecipes}>\n                        {/* this button needs an event handler */}\n                        Get Recipes\n                    </button>\n                    \n                    <RecipeContainer dispatch={dispatch} recipes={recipes} />\n                    {recipes.length > 0 ? (\n                        <button \n                            className=\"moreButton button is-fullwidth\"\n                            onClick={moreRecipes}>\n                            Get More Recipes\n                        </button>\n                    ) : null}\n                </>\n            ) : (\n                <Landing />\n            )}\n        </>\n    );\n};\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Link } from \"react-router-dom\";\n\nexport default () => {\n    const { loginWithRedirect, isAuthenticated, logout } = useAuth0();\n    const CSS = { backgroundColor: \"#284d1d\" };\n    return (\n        <div className=\"navbar is-fixed-bottom\" style={CSS}>\n            <div className=\"tabs navtabs is-boxed is-fullwidth\">\n                <ul>\n                    <li>\n                        <Link to=\"./search\">\n                            <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"./library\">\n                            <i className=\"fa fa-list\" aria-hidden=\"true\"></i>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"./settings\">\n                            <i className=\"fa fa-cog\" aria-hidden=\"true\"></i>\n                        </Link>\n                    </li>\n                    <li>\n                        {isAuthenticated ? (\n                            <Link\n                                to=\"./search\"\n                                >\n                                <i\n                                    className=\"fas fa-sign-out-alt\"\n                                    aria-hidden=\"true\"></i>\n                            </Link>\n                        ) : (\n                            <Link\n                                to=\"./search\"\n                                onClick={() => loginWithRedirect()}>\n                                <i\n                                    className=\"fas fa-sign-in-alt\"\n                                    aria-hidden=\"true\"></i>\n                            </Link>\n                        )}\n                    </li>\n                </ul>\n            </div>\n        </div>\n    );\n};\n","import React, { useContext, useEffect } from \"react\";\nimport AppContext from \"../utils/AppContext\";\nimport LogoSmall from \"./LogoSmall\"\n\n// Components\nimport RecipeContainer from \"./RecipeContainer\";\n\nexport default ({ dispatch }) => {\n    const { savedRecipes } = useContext(AppContext);\n    useEffect(() => dispatch({ activePage: \"library\" }), []);\n    const CSS = { textAlign: \"center\", fontSize:\"larger\" };\n    return (\n        <>\n        <LogoSmall/>\n            {savedRecipes.length > 0 ? (\n                <>\n                    <h1 style={CSS}>Saved Recipes</h1>\n                    <br />\n                    <RecipeContainer\n                        dispatch={dispatch}\n                        recipes={savedRecipes}\n                    />\n                </>\n            ) : (\n                <>\n                    {\" \"}\n                    <h1 className=\"h1Library\">\n                        There is nothing in your library!!!\n                    </h1>\n                    <br />\n                    <h3 className=\"h3Library\">\n                        Easy as 1, 2, 3 to start saving recipes in your library:\n                        <br />\n                        <br />\n                        1) Login{\" \"}\n                        <i\n                            className=\"fas fa-sign-in-alt tabicon\"\n                            aria-hidden=\"true\"></i>\n                        <br />\n                        2) Search{\" \"}\n                        <i\n                            className=\"fa fa-search tabicon\"\n                            aria-hidden=\"true\"></i>\n                        <br />\n                        3) Save{\" \"}\n                        <span className=\"tag tagicon is-medium\">Save</span>\n                        <br />\n                    </h3>\n                </>\n            )}\n        </>\n    );\n};\n","import React from \"react\";\n\nexport default ({ text, onChangeHandler, checked }) => {\n    const CSS = { margin: \"0.4em\" };\n    return (\n        <label className=\"checkbox\" style={CSS}>\n            <input\n                type=\"checkbox\"\n                value={text}\n                checked={checked}\n                onChange={onChangeHandler}\n            />\n            {text}\n        </label>\n    );\n};\n","import React, { useContext } from \"react\";\nimport AppContext from \"../utils/AppContext\";\nimport { v4 as uuid } from \"uuid\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\n// Components\nimport FlexContainer from \"./FlexContainer\";\nimport InputForm from \"./InputForm\";\nimport Pantry from \"./Pantry\";\nimport CheckBox from \"./CheckBox\";\nimport Landing from \"./Landing\";\nimport LogoSmall from \"./LogoSmall\"\n\nexport default ({ dispatch }) => {\n    const { isAuthenticated } = useAuth0();\n    const {\n        excludeIngredients,\n        excludeCuisine,\n        intolerances,\n        diet,\n    } = useContext(AppContext);\n    const intolerancesList = [\n        \"Dairy\",\n        \"Egg\",\n        \"Gluten\",\n        \"Grain\",\n        \"Peanut\",\n        \"Seafood\",\n        \"Sesame\",\n        \"Shellfish\",\n        \"Soy\",\n        \"Sulfite\",\n        \"Tree Nut\",\n        \"Wheat\",\n    ];\n\n    const dietList = [\n        \"Gluten Free\",\n        \"Ketogenic\",\n        \"Vegetarian\",\n        \"Lacto-Vegetarian\",\n        \"Ovo-Vegetarian\",\n        \"Vegan\",\n        \"Pescetarian\",\n        \"Paleo\",\n        \"Primal\",\n        \"Whole30\",\n    ];\n\n    const cuisineList = [\n        \"African\",\n        \"American\",\n        \"British\",\n        \"Cajun\",\n        \"Caribbean\",\n        \"Chinese\",\n        \"Eastern European\",\n        \"European\",\n        \"French\",\n        \"German\",\n        \"Greek\",\n        \"Indian\",\n        \"Irish\",\n        \"Italian\",\n        \"Japanese\",\n        \"Jewish\",\n        \"Korean\",\n        \"latin American\",\n        \"Mediterranean\",\n        \"Mexican\",\n        \"Middle Eastern\",\n        \"Nordic\",\n        \"Southern\",\n        \"Spanish\",\n        \"Thai\",\n        \"Vietnamese\",\n    ];\n\n    // InputForm handler\n    const addToExcludeIngredients = (event) => {\n        event.preventDefault();\n        dispatch({\n            excludeIngredients: [\n                ...new Set([\n                    ...excludeIngredients,\n                    ...event.target.firstChild.value\n                        .split(\",\")\n                        .map((item) => item.trim())\n                        .filter((item) => item !== \"\"),\n                ]),\n            ],\n        });\n        event.target.firstChild.value = \"\";\n    };\n\n    // Pantry item tags handler\n    const deleteFromExcludeIngredients = (event) => {\n        dispatch({\n            excludeIngredients: excludeIngredients.filter(\n                (item) => item !== event.target.innerText\n            ),\n        });\n    };\n\n    // Intolerances checkbox handler\n    const setIntolerances = (event) => {\n        if (event.target.checked)\n            dispatch({ intolerances: [...intolerances, event.target.value] });\n        else\n            dispatch({\n                intolerances: intolerances.filter(\n                    (item) => item !== event.target.value\n                ),\n            });\n    };\n\n    // Diet checkbox handler\n    const setDiet = (event) => {\n        if (event.target.checked)\n            dispatch({ diet: [...diet, event.target.value] });\n        else\n            dispatch({\n                diet: diet.filter((item) => item !== event.target.value),\n            });\n    };\n\n    // Excluded cuisines checkbox handler\n    const setExcludeCuisine = (event) => {\n        if (event.target.checked)\n            dispatch({\n                excludeCuisine: [...excludeCuisine, event.target.value],\n            });\n        else\n            dispatch({\n                excludeCuisine: excludeCuisine.filter(\n                    (item) => item !== event.target.value\n                ),\n            });\n    };\n\n    return (\n        <>\n        <LogoSmall/>\n            {isAuthenticated ? (\n                <>\n                    <h2>\n                        Select or enter the items below to either exclude any\n                        food intolerances, cuisines, or ingredients, and select\n                        a diet if you like. All information will be stored in\n                        your settings for future searches until you decide to\n                        change them.\n                    </h2>\n                    <label className=\"label has-text-centered\">\n                        Food Intolerances\n                    </label>\n                    <FlexContainer>\n                        {intolerancesList.map((item) => (\n                            <CheckBox\n                                key={uuid()}\n                                text={item}\n                                onChangeHandler={setIntolerances}\n                                checked={\n                                    intolerances.includes(item) ? true : false\n                                }\n                            />\n                        ))}\n                    </FlexContainer>{\" \"}\n                    <label className=\"label has-text-centered\">\n                        Must Fit These Diets\n                    </label>\n                    <FlexContainer>\n                        {dietList.map((item) => (\n                            <CheckBox\n                                key={uuid()}\n                                text={item}\n                                onChangeHandler={setDiet}\n                                checked={diet.includes(item) ? true : false}\n                                // need to add event handlers\n                            />\n                        ))}\n                    </FlexContainer>{\" \"}\n                    <label className=\"label has-text-centered\">\n                        exclude Cuisine\n                    </label>\n                    <FlexContainer>\n                        {cuisineList.map((item) => (\n                            <CheckBox\n                                key={uuid()}\n                                text={item}\n                                onChangeHandler={setExcludeCuisine}\n                                checked={\n                                    excludeCuisine.includes(item) ? true : false\n                                }\n                                // need to add event handlers\n                            />\n                        ))}\n                    </FlexContainer>\n                    <label className=\"label has-text-centered\">\n                        exclude Ingredients\n                    </label>\n                    <InputForm submitHandler={addToExcludeIngredients} />\n                    <Pantry\n                        items={excludeIngredients}\n                        onClickHandler={deleteFromExcludeIngredients}\n                    />\n                </>\n            ) : (\n                <Landing />\n            )}\n        </>\n    );\n};\n","import React, { useContext } from \"react\";\nimport AppContext from \"../utils/AppContext\";\nimport { v4 as uuid } from \"uuid\";\nimport LogoSmall from \"./LogoSmall\"\n// Components\nimport FlexContainer from \"./FlexContainer\";\n\nexport default () => {\n    const { recipes, savedRecipes, activeRecipe } = useContext(AppContext);\n    const recipe = [...recipes, ...savedRecipes].filter(\n        ({ information }) => information.id === activeRecipe\n    )[0];\n\n    return (\n        <>\n            <h1>REcipe Details</h1>\n\n            <div className=\"tile is-ancestor\">\n                <div className=\"tile is-vertical is-8\">\n                    <div className=\"tile\">\n                        \n                        <div className=\"tile is-parent is-vertical\">\n                            \n                            <article className=\"tile is-child notification tileStyles\">\n                                <p className=\"title\">\n                                    Nutrition Facts:\n                                        {recipe.nutrients.map((item) => (\n                                            <span key={uuid()} class=\"tags has-addons\"><span class=\"tag is-dark\">{item.name}</span><span class=\"tag is-info\">{item.amount} {item.unit}</span></span>\n                                        ))} \n                                </p> \n                            </article>\n                                    \n                            <article className=\"tile is-child notification\">\n                                <div class=\"title field is-grouped is-grouped-multiline\">\n                                    Missing Ingredients:\n                                    <div class=\"control\">\n                                        {recipe.usedIngredients.map((item) => (\n                                            <span key={uuid()} class=\"tags has-addons\"><span class=\"tag is-dark\">{item.name}</span><span class=\"tag is-info\">{item.amount} {item.unit}</span></span>\n                                        ))}\n                                    </div>\n                                </div>\n                            </article>\n\n                        </div>\n                        <div className=\"tile is-parent\">\n                            <article className=\"tile is-child notification\">\n                                <p className=\"title\">Middle tile</p>\n                                <p className=\"subtitle\">With an image</p>\n                                <figure className=\"image is-4by3\">\n                                    <img src=\"https://bulma.io/images/placeholders/640x480.png\" />\n                                </figure>\n                            </article>\n                        </div>\n                    </div>\n                    <div className=\"tile is-parent\">\n                        <article className=\"tile is-child notification\">\n                            <p className=\"title\">Wide tile</p>\n                            <p className=\"subtitle\">Aligned with the right tile</p>\n                            <div className=\"content\">\n                            </div>\n                        </article>\n                    </div>\n                </div>\n                <div className=\"tile is-parent\">\n                    <article className=\"tile is-child notification\">\n                        <div className=\"content\">\n                            <p className=\"title\">Tall tile</p>\n                            <p className=\"subtitle\">With even more content</p>\n                            <div className=\"content\">\n                            </div>\n                        </div>\n                    </article>\n                </div>\n            </div>\n\n            <br />\n            {recipe.usedIngredients.length > 0 ? (\n                <FlexContainer>\n                    {/* ******************************Owned Ingredients table****************************** */}\n                    <table className=\"table is-fullwidth is-striped is-hoverable\">\n                        <thead className=\"is-12 is-fullwidth \">\n                            <tr>\n                                <th colSpan=\"2\" className=\"is-12\">\n                                    Included Ingredients\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <th>Name</th>\n                                <th>Amount</th>\n                            </tr>\n                            <div class=\"field is-grouped is-grouped-multiline\">\n                                <div class=\"control\">\n                                    {recipe.usedIngredients.map((item) => (\n                                        <div key={uuid()} class=\"tags has-addons\">\n                                            <span class=\"tag is-dark\">{item.name}</span>\n                                            <span class=\"tag is-info\">{item.amount} {item.unit}</span>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        </tbody>\n                    </table>\n                </FlexContainer>\n            ) : null}\n            <br />\n            {recipe.missedIngredients.length > 0 ? (\n                <FlexContainer>\n                    {/* ******************************Missing Ingredients table****************************** */}\n                    <table className=\"table is-fullwidth is-striped is-hoverable\">\n                        <thead className=\"is-12 is-fullwidth \">\n                            <tr>\n                                <th colSpan=\"2\" className=\"is-12\">\n                                    Missing Ingredients\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <th>Name</th>\n                                <th>Amount</th>\n                            </tr>\n                            {recipe.missedIngredients.map((item) => (\n                                <tr key={uuid()}>\n                                    <td>{item.name}</td>\n                                    <td>\n                                        {item.amount} {item.unit}\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </FlexContainer>\n            ) : null}\n            <br />\n            {recipe.instructions.length > 0 ? (\n                <FlexContainer>\n                    <div className=\"card-details card-instructions is-fullwidth\">\n                        <div className=\"card-header\">\n                            <div className=\"card-header-title card.details\">\n                                Instructions\n                            </div>\n                        </div>\n                        <div className=\"card-content-details has-text-left\">\n                            <ol>\n                                {recipe.instructions.map((step) => (\n                                    <li className=\"instructions\" key={uuid()}>\n                                        {\" \"}\n                                        <strong>\n                                            <input\n                                                className=\"is-large\"\n                                                type=\"checkbox\"></input>\n                                        </strong>{\" \"}\n                                        {step}\n                                    </li>\n                                ))}\n                            </ol>\n                        </div>\n                    </div>\n                </FlexContainer>\n            ) : null}\n        </>\n    );\n};\n            \n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport AppContext from \"./utils/AppContext\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport localforage from \"localforage\";\nimport \"./App.css\";\n\n// Components\nimport Hero from \"./components/Hero\";\nimport Search from \"./components/Search\";\nimport Nav from \"./components/Nav\";\nimport Library from \"./components/Library\";\nimport Settings from \"./components/Settings\";\nimport Details from \"./components/Details\";\n\nexport default () => {\n    const [state, setState] = useState({\n        id: \"\",\n        cuisine: [],\n        excludeCuisine: [],\n        diet: [],\n        intolerances: [],\n        includeIngredients: [],\n        excludeIngredients: [],\n        recipes: [],\n        savedRecipes: [],\n        activeRecipe: 0,\n        activePage: \"\",\n    });\n\n    const dispatch = (payload) => setState({ ...state, ...payload });\n\n    const { isAuthenticated, user } = useAuth0();\n\n    // If user is Authenticated load state from server else load\n    // from local storage\n    useEffect(() => {\n        if (isAuthenticated) {\n            dispatch({ id: user.email });\n            fetch(\"/db/get\", { id: user.email })\n                .then((state) => dispatch(state))\n                .then(() => console.log(\"data loaded from server storage\"))\n                .catch((err) => console.log(err));\n        } else {\n            localforage\n                .getItem(\"local\")\n                .then((state) => dispatch(state))\n                .then(() => console.log(\"data loaded from local storage\"))\n                .catch((err) => console.log(err));\n        }\n    }, [isAuthenticated]);\n\n    // When the state is updated save it to local and server storage\n    useEffect(() => {\n        console.log(state);\n        if (isAuthenticated) {\n            fetch(\"/db/set\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(state),\n            })\n                .then(() => console.log(\"data saved to server storage\"))\n                .catch((err) => console.log(err));\n            localforage\n                .setItem(\"local\", state)\n                .then(() => console.log(\"data saved to local storage\"))\n                .catch((err) => console.log(err));\n        }\n    }, [state]);\n\n    return (\n        <AppContext.Provider value={state}>\n            <BrowserRouter>\n                <Hero>\n                    <>\n                        <Route\n                            exact\n                            path={[\"/\", \"/search\"]}\n                            render={() => <Search dispatch={dispatch} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/library\"\n                            render={() => <Library dispatch={dispatch} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/settings\"\n                            render={() => <Settings dispatch={dispatch} />}\n                        />\n                        <Route\n                            exact\n                            path=\"/details\"\n                            render={() => <Details />}\n                        />\n                        <Nav />\n                    </>\n                </Hero>\n            </BrowserRouter>\n        </AppContext.Provider>\n    );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <Auth0Provider\n        domain=\"dev-t7jawcee.us.auth0.com\"\n        clientId=\"4Sj3xSG8lGxCi51BzJhhsY88dG0QNAis\"\n        redirectUri=\"https://saveeatrepeat.vercel.app/\">\n        <App />\n    </Auth0Provider>,\n    document.getElementById(\"root\")\n);\n \n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}